<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：Coding | { vampirefan's   Harbor }]]></title>
  <link href="http://vampirefan.github.com/blog/categories/coding/atom.xml" rel="self"/>
  <link href="http://vampirefan.github.com/"/>
  <updated>2013-04-29T14:01:42+08:00</updated>
  <id>http://vampirefan.github.com/</id>
  <author>
    <name><![CDATA[vampirefan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用dropbox做为私有git仓库]]></title>
    <link href="http://vampirefan.github.com/blog/2013/04/28/li-yong-dropboxzuo-wei-si-you-gitcang-ku/"/>
    <updated>2013-04-28T17:45:00+08:00</updated>
    <id>http://vampirefan.github.com/blog/2013/04/28/li-yong-dropboxzuo-wei-si-you-gitcang-ku</id>
    <content type="html"><![CDATA[<p>最近又开始更新自己使用的软件了，evernote重新用起来，dropbox重新用起来，发现一个很有前途的网盘-快盘。支持macOS，百度网盘很好，可惜不支持macOS，所以把百度网盘作为远程软件仓库了。下面记录一下使用dropbox作为私有的git仓库的办法。Github我很喜欢了，可惜自己总是用不好，多台电脑上的同步效果不好。
<!--more--></p>

<p>安装dropbox，在dropbox文件夹下建立Git文件夹：</p>

<p><code>
mkdir ~/Dropbox/Git
cd ~/Dropbox/Git
</code></p>

<p>为自己的项目建立远程Repo</p>

<p><code>
git init --bare projectName.git
</code></p>

<p>进入自己的项目目录并将代码push到Dropbox</p>

<p><code>
cd ~/projectName
git init
git add .
git add -u
git commit -am 'first commit'
git add origin ~/Dropbox/Git/projectName.git
git push -u origin master
</code></p>

<p>就这么简单。
在另一台电脑上使用的时候clone就好，注意查看远程仓库名称：</p>

<p><code>
git clone ~/Dropbox/Git/projectName.git
git remote -v
</code></p>

<p>挺简单，挺强大。最近很有些忙了，没时间捣鼓了，找实习，笔试，面试，编程算法，编程语言都要复习，老师这边还这么多事情。虽然很紧，很累，五一节还是赶回家看看吧。火车上才有点时间写篇博客。人生苦短，转眼奔三了，年轻的机会不多了，人生终究是会有遗憾的。加油吧，少年~ ^_^</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git使用方法]]></title>
    <link href="http://vampirefan.github.com/blog/2012/11/20/git-shi-yong-fang-fa/"/>
    <updated>2012-11-20T13:23:00+08:00</updated>
    <id>http://vampirefan.github.com/blog/2012/11/20/git-shi-yong-fang-fa</id>
    <content type="html"><![CDATA[<p>经常使用github。基本命令却老是要查找后再使用。这里自己记一记。</p>

<p><a href="http://rogerdudler.github.com/git-guide/index.zh.html">http://rogerdudler.github.com/git-guide/index.zh.html</a>这篇写的特别好！</p>

<h3 id="git">git设置</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git config –global user.name [username]
</span><span class='line'>git config –global user.email [email]</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->

<h3 id="git-1">git新仓库</h3>

<ol>
  <li>
    <p>github上新建仓库appName</p>
  </li>
  <li>
    <p>本地文件夹下git初始化后推送
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git init
</span><span class='line'>touch README
</span><span class='line'>git add .
</span><span class='line'>git commit -am ‘first commit’
</span><span class='line'>git remote add origin git@github.com:username/appName.git
</span><span class='line'>git push -u origin master</span></code></pre></td></tr></table></div></figure></notextile></div></p>
  </li>
</ol>

<h3 id="git-2">git推送到远程</h3>
<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gitpush.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nb">echo</span> “Pushing to remote”
</span><span class='line'><span class="nb">echo</span> “git add .”
</span><span class='line'>git add .
</span><span class='line'><span class="nb">echo</span> “git add -u”
</span><span class='line'>git add -u
</span><span class='line'><span class="nv">message</span><span class="o">=</span>”Updated at <span class="k">$(</span>date<span class="k">)</span>”
</span><span class='line'><span class="nb">echo</span> “git commit -m <span class="k">${</span><span class="nv">message</span><span class="k">}</span>”
</span><span class='line'>git commit -m “<span class="k">${</span><span class="nv">message</span><span class="k">}</span>”
</span><span class='line'><span class="nb">echo</span> “git push origin master –force”
</span><span class='line'>git push origin master –force
</span><span class='line'><span class="nb">echo</span> “git push <span class="nb">complete</span>”
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3 id="git-3">git获取更新本地</h3>
<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>gitpull.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c"># gitpull.sh</span>
</span><span class='line'><span class="nb">echo</span> “Pulling from remote”
</span><span class='line'><span class="nb">echo</span> “git add .”
</span><span class='line'>git add .
</span><span class='line'><span class="nb">echo</span> “git add -u”
</span><span class='line'>git add -u
</span><span class='line'><span class="nv">message</span><span class="o">=</span>”Pulling at <span class="k">$(</span>date<span class="k">)</span>”
</span><span class='line'><span class="nb">echo</span> “git commit -m <span class="k">${</span><span class="nv">message</span><span class="k">}</span>”
</span><span class='line'>git commit -m “<span class="k">${</span><span class="nv">message</span><span class="k">}</span>”
</span><span class='line'><span class="nb">echo</span> “git pull –rebase master”
</span><span class='line'>git pull –rebase origin master
</span><span class='line'><span class="nb">echo</span> “git pull <span class="nb">complete</span>”
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3 id="git-4">git获取仓库</h3>
<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress
</span><span class='line'>git clone -b source git@github.com:username/username.github.com.git octopress</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用浏览器做Presentation]]></title>
    <link href="http://vampirefan.github.com/blog/2012/10/20/presentation-with-browser/"/>
    <updated>2012-10-20T10:21:00+08:00</updated>
    <id>http://vampirefan.github.com/blog/2012/10/20/presentation-with-browser</id>
    <content type="html"><![CDATA[<p>终于找到<code>markdown</code>写<code>Presentation</code>的<a href="http://slideshow.rubyforge.org/index.html">方法</a>了。很理想，很强大，正是我一直想实现的功能。先前找到的<a href="http://imakewebthings.com/deck.js/">deck.js</a>和<a href="http://bartaz.github.com/impress.js">impress.js</a>被做成模板集成在<code>slideshow</code>这个<code>ruby gem</code>里面了。分别可以在<a href="http://geraldb.github.com/slideshow-deck.js/">slideshow-deck.js</a>和<a href="http://geraldb.github.com/slideshow-impress.js/">slideshow-impress.js</a>找到。</p>

<!--more-->

<p><code>deck.js</code>和<code>impress.js</code>的效果是不用说了。<code>impress.js</code>是借用了<a href="http://prezi.com/">prezi</a>的思想，把<code>presentation</code>做在一张无限延展的画布上，通过画布上一个个局部的<code>slide</code>间的动画转接，完成整个演示过程，比传统的<code>PowerPoint</code>更能抓住观众。</p>

<p><code>gem slideshow</code>的实现效果可以参见<a href="/slides/impress.js.html">slideshow-impress.js demo</a>和<a href="/slides/deck.js.html">slideshow-deck.js demo</a>。</p>

<p>我仍然觉得移动互联网的发展是不可限量的。浏览器能实现的功能远不止替代<code>ppt</code>这么简单。当云概念慢慢清晰在人们的生活中以后，谈了很多年却并没有真正融入生活和生产的物联网必将依靠着云的力量重新进入人们的视线。</p>

<p>最近经常为了很多想实现的功能和应用在网上搜寻各种互联网上的技术，越来越觉得有太多的新技术，新方法，真是学无止境啊。</p>

<p>今天一德国回来的CS的同学告诉我他在那里做的一个网站项目用的是<code>Grails</code>，<a href="http://grails.org/"><code>Groovy &amp; Rails</code></a>，看上去很不错，可以学学！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[latex详细配置]]></title>
    <link href="http://vampirefan.github.com/blog/2012/10/16/latexxiang-xi-pei-zhi/"/>
    <updated>2012-10-16T22:30:00+08:00</updated>
    <id>http://vampirefan.github.com/blog/2012/10/16/latexxiang-xi-pei-zhi</id>
    <content type="html"><![CDATA[<p>弄个完整的配置方法在这里，以备不时之需。前面用notepad++的配置方法在<a href="http://vampirefan.github.com/blog/2011/03/24/yi-xie-pei-zhi/">一些配置</a>里面简单的提到过。<a href="http://vampirefan.github.com/blog/2012/08/10/latexmo-ban/">Latex模板</a>里面贴了几个模板，却不是很清楚明了。</p>

<p>最近弄markdown想直接把其和latex一起使用，却还没整出特别完美的简单办法，暂时想到的还是要用<a href="http://johnmacfarlane.net/pandoc/">pandoc</a>这个开源脚本。后来有找到<a href="http://yihui.name/knitr/">R语言的RStudio</a>的方法，觉得还行。可是还是不是很喜欢，作者强烈建议使用<code>lyx</code>来写latex文档，却发现不大好用，虽然配置很全面，而且所写即所得，可是不喜欢用鼠标点来点去的。不过熟悉了，快捷键什么的顺手了应该还是挺好的。
<!--more--></p>

<p>现在主要还是使用sublime做编辑器，ctex做解释的编译方法。下面是主要配制方法和几个模板。</p>

<h2 id="windows">Windows上的配置</h2>

<p>1.安装<a href="http://www.ctex.org/CTeXDownload/">ctex</a>，安装<a href="http://www.sublimetext.com/">sublimeText2</a>。<br />
2.在sublime中建新的<code>build-system</code>  </p>

<p><div><script src='https://gist.github.com/3863444.js'></script>
<noscript><pre><code>//My_xelatex.sublime-build
{
	&quot;selector&quot;: &quot;text.tex.latex&quot;,
	&quot;working_dir&quot;: &quot;$file_path&quot;,
	&quot;shell&quot;: true,
	&quot;cmd&quot;: [&quot;xelatex&quot;, &quot;$file_base_name.tex&quot;, &quot;&amp;&quot;, &quot;xelatex&quot;, &quot;$file_base_name.tex&quot;, &quot;&amp;&quot;, &quot;C:\\Program Files (x86)\\Adobe\\Reader 9.0\\Reader\\AcroRd32.exe&quot;, &quot;/n&quot;, &quot;$file_base_name.pdf&quot;]
}</code></pre></noscript></div>

3.<code>ctrl+b</code>编译</p>

<h2 id="mac-osx">Mac OSX上的配置</h2>
<p>1.安装<a href="http://www.mactex.com/">MacTex</a>，安装<a href="http://www.sublimetext.com/">sublimeText2</a>。 <br />
2.将windows上的一些中文字体拷贝到Mac下安装，然后修改<code>ctex-xecjk-adobefonts.def</code>和<code>ctex-xecjk-windows.def</code>文件：</p>

<p>Liquid error: ClassNotFound: no lexer for alias 'def' found</p>

<p>3.在sublime中建新的<code>build-system</code> <br />
<div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>My_xelatex.sublime-build  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">//My_xelatex.sublime-build</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>	<span class="err">“selector”:</span> <span class="err">“text.tex.latex”,</span>
</span><span class='line'>	<span class="err">“working_dir”:</span> <span class="err">“$file_path”,</span>
</span><span class='line'>	<span class="err">“path”:</span> <span class="err">“/bin:/usr/bin:/usr/texbin”,</span>
</span><span class='line'>	<span class="err">//</span> <span class="err">“shell”:</span> <span class="err">true,</span>
</span><span class='line'>	<span class="err">“cmd”:</span> <span class="err">[</span> <span class="err">“bash”,</span> <span class="err">“-c”,</span> <span class="err">“xelatex</span> <span class="err">‘$file_base_name.tex’</span> <span class="err">&amp;amp;&amp;amp;</span> <span class="err">xelatex</span> <span class="err">‘$file_base_name.tex’</span> <span class="err">&amp;amp;&amp;amp;</span> <span class="err">open</span> <span class="err">‘$file_base_name.pdf’”]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>4.<code>ctrl+b</code>编译</p>

<h2 id="latex">latex的模板</h2>

<ul>
  <li>
    <p>中文报告模板
<a href="https://gist.github.com/vampirefan/3897370">https://gist.github.com/vampirefan/3897370</a></p>
  </li>
  <li>
    <p>英文报告模板
<a href="https://gist.github.com/vampirefan/3898000">https://gist.github.com/vampirefan/3898000</a></p>
  </li>
  <li>
    <p>中文beamer模板
<a href="https://gist.github.com/vampirefan/3916383">https://gist.github.com/vampirefan/3916383</a></p>
  </li>
  <li>
    <p>英文beamer模板
<a href="https://gist.github.com/vampirefan/3910548">https://gist.github.com/vampirefan/3910548</a></p>
  </li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关注内容]]></title>
    <link href="http://vampirefan.github.com/blog/2012/10/15/guan-zhu-nei-rong/"/>
    <updated>2012-10-15T23:40:00+08:00</updated>
    <id>http://vampirefan.github.com/blog/2012/10/15/guan-zhu-nei-rong</id>
    <content type="html"><![CDATA[<p>又把网站的外观整了下，决定一段时间内在也不理会这个了。一个网站的外表再怎么说也只能是外表，最终决定质量的还是内容。但不能说外表不重要，一眼看上去给人舒适才能让人静下心来读内容。网页还是要简洁点的好。再多的修饰就是浮夸，就像生活中女人给人的印象终究是简单和素颜的好，浓妆总会给人生厌。
<!--more--></p>

<p>整网站外观是件很痛苦的事情，产生的效果总是和预想的不同，一个地方达到要求了有时候造成另外的地方的不协调。时间没有完美，只能尽可能的去均衡美好和不协调。加了一个功能，方向键和<code>J</code>,<code>K</code>可以用来跳转到上一篇或下一篇博文。但是边栏因为<code>jQuary</code>不能在<code>footer</code>里面正确的以三栏的形式显示了，索性就不显示了。最后还是决定不用<code>jQuary</code>了。<code>js</code>实现的方向键跳转功能如下：</p>

<p><div><script src='https://gist.github.com/3906144.js'></script>
<noscript><pre><code>&lt;script type=&quot;text/javascript&quot;&gt;
function jumppages(){
    if (event.target.nodeName.toUpperCase() != 'BODY') return;
    var url = false;
    if (event.which == 37 || event.which == 74) {  // Left arrow and J
        {% if page.previous %}
    url = '{{ site.url }}{{ page.previous.url }}';
    {% endif %}
    }
    else if (event.which == 39 || event.which == 75) {  // Right arrow and K
        {% if page.next %}
    url = '{{ site.url }}{{ page.next.url }}';
    {% endif %}
    }
    if (url) {
        window.location = url;
    }
}
document.onkeydown=jumppages;
&lt;/script&gt;</code></pre></noscript></div>
</p>

<p>有点晚了，早点睡了。挤一挤，时间总会有的。重要的是要提高效率！！</p>

]]></content>
  </entry>
  
</feed>
